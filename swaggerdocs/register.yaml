components:
  schemas:
    Action:
      properties:
        contactEmail:
          type: string
        createdOnEpoch:
          $ref: '#/components/schemas/Timestamp'
        description:
          type: string
        filter:
          $ref: '#/components/schemas/Filter'
        id:
          type: string
        img:
          type: string
        name:
          type: string
        url:
          type: string
      title: Action
      type: object
    ChallengeResponse:
      properties:
        responseHash:
          type: string
      title: ChallengeResponse
      type: object
    ConnectedOuterService:
      properties:
        name:
          type: string
        version:
          type: string
      title: ConnectedOuterService
      type: object
    CreateActionDto:
      properties:
        contactEmail:
          type: string
        description:
          pattern: ^[A-Za-z0-9. ]{0,255}
          type: string
        filter:
          $ref: '#/components/schemas/Filter'
        id:
          pattern: ^[A-Za-z0-9-]{2,50}
          type: string
        img:
          type: string
        name:
          pattern: ^[A-Za-z0-9- ]{2,50}
          type: string
        url:
          type: string
      title: CreateActionDto
      type: object
    DdmsReq:
      properties:
        contactEmail:
          type: string
        createdDateTimeEpoch:
          $ref: '#/components/schemas/TimestampReq'
        description:
          pattern: ^[A-Za-z0-9. ]{0,255}
          type: string
        id:
          pattern: ^[A-Za-z0-9-]{2,50}
          type: string
        interfaces:
          items:
            $ref: '#/components/schemas/RegisteredInterface'
          type: array
          uniqueItems: true
        name:
          pattern: ^[A-Za-z0-9- ]{2,50}
          type: string
      required:
      - id
      - name
      title: DdmsReq
      type: object
    DdmsRes:
      properties:
        contactEmail:
          type: string
        createdDateTimeEpoch:
          $ref: '#/components/schemas/TimestampRes'
        description:
          pattern: ^[A-Za-z0-9. ]{0,255}
          type: string
        id:
          pattern: ^[A-Za-z0-9-]{2,50}
          type: string
        interfaces:
          items:
            $ref: '#/components/schemas/RegisteredInterface'
          type: array
          uniqueItems: true
        name:
          pattern: ^[A-Za-z0-9- ]{2,50}
          type: string
      required:
      - id
      - name
      title: DdmsRes
      type: object
    Filter:
      properties:
        entityType:
          items:
            type: string
          type: array
        source:
          items:
            type: string
          type: array
        version:
          items:
            type: string
          type: array
      title: Filter
      type: object
    GsaSecret:
      properties:
        value:
          $ref: '#/components/schemas/GsaSecretValue'
      title: GsaSecret
      type: object
    GsaSecretValue:
      properties:
        audience:
          type: string
        key:
          type: string
      title: GsaSecretValue
      type: object
    HmacSecret:
      properties:
        value:
          type: string
      title: HmacSecret
      type: object
    JsonNode:
      title: JsonNode
      type: object
    ParsedAction:
      properties:
        errors:
          type: string
        url:
          type: string
      title: ParsedAction
      type: object
    RegisteredInterface:
      properties:
        entityType:
          pattern: ^[A-Za-z0-9 ]{2,50}
          type: string
        schema:
          type: object
      required:
      - entityType
      title: RegisteredInterface
      type: object
    ResponseEntity:
      properties:
        body:
          type: object
        statusCode:
          enum:
          - ACCEPTED
          - ALREADY_REPORTED
          - BAD_GATEWAY
          - BAD_REQUEST
          - BANDWIDTH_LIMIT_EXCEEDED
          - CHECKPOINT
          - CONFLICT
          - CONTINUE
          - CREATED
          - DESTINATION_LOCKED
          - EXPECTATION_FAILED
          - FAILED_DEPENDENCY
          - FORBIDDEN
          - FOUND
          - GATEWAY_TIMEOUT
          - GONE
          - HTTP_VERSION_NOT_SUPPORTED
          - IM_USED
          - INSUFFICIENT_SPACE_ON_RESOURCE
          - INSUFFICIENT_STORAGE
          - INTERNAL_SERVER_ERROR
          - I_AM_A_TEAPOT
          - LENGTH_REQUIRED
          - LOCKED
          - LOOP_DETECTED
          - METHOD_FAILURE
          - METHOD_NOT_ALLOWED
          - MOVED_PERMANENTLY
          - MOVED_TEMPORARILY
          - MULTIPLE_CHOICES
          - MULTI_STATUS
          - NETWORK_AUTHENTICATION_REQUIRED
          - NON_AUTHORITATIVE_INFORMATION
          - NOT_ACCEPTABLE
          - NOT_EXTENDED
          - NOT_FOUND
          - NOT_IMPLEMENTED
          - NOT_MODIFIED
          - NO_CONTENT
          - OK
          - PARTIAL_CONTENT
          - PAYLOAD_TOO_LARGE
          - PAYMENT_REQUIRED
          - PERMANENT_REDIRECT
          - PRECONDITION_FAILED
          - PRECONDITION_REQUIRED
          - PROCESSING
          - PROXY_AUTHENTICATION_REQUIRED
          - REQUESTED_RANGE_NOT_SATISFIABLE
          - REQUEST_ENTITY_TOO_LARGE
          - REQUEST_HEADER_FIELDS_TOO_LARGE
          - REQUEST_TIMEOUT
          - REQUEST_URI_TOO_LONG
          - RESET_CONTENT
          - SEE_OTHER
          - SERVICE_UNAVAILABLE
          - SWITCHING_PROTOCOLS
          - TEMPORARY_REDIRECT
          - TOO_EARLY
          - TOO_MANY_REQUESTS
          - UNAUTHORIZED
          - UNAVAILABLE_FOR_LEGAL_REASONS
          - UNPROCESSABLE_ENTITY
          - UNSUPPORTED_MEDIA_TYPE
          - UPGRADE_REQUIRED
          - URI_TOO_LONG
          - USE_PROXY
          - VARIANT_ALSO_NEGOTIATES
          type: string
        statusCodeValue:
          format: int32
          type: integer
      title: ResponseEntity
      type: object
    Secret:
      title: Secret
      type: object
    Subscription:
      properties:
        createdBy:
          type: string
        description:
          pattern: ^[A-Za-z0-9. ]{0,255}
          type: string
        id:
          type: string
        name:
          pattern: ^[A-Za-z0-9- ]{2,50}
          type: string
        notificationId:
          type: string
        pushEndpoint:
          type: string
        secret:
          $ref: '#/components/schemas/Secret'
        topic:
          type: string
      required:
      - name
      - pushEndpoint
      - topic
      title: Subscription
      type: object
    SubscriptionInfo:
      properties:
        createdBy:
          type: string
        description:
          type: string
        id:
          type: string
        name:
          type: string
        notificationId:
          type: string
        pushEndpoint:
          type: string
        topic:
          type: string
      title: SubscriptionInfo
      type: object
    TestActionRequest:
      properties:
        action:
          $ref: '#/components/schemas/CreateActionDto'
        testPayload:
          $ref: '#/components/schemas/JsonNode'
      required:
      - testPayload
      title: TestActionRequest
      type: object
    Timestamp:
      properties:
        date:
          format: int32
          type: integer
        day:
          format: int32
          type: integer
        hours:
          format: int32
          type: integer
        minutes:
          format: int32
          type: integer
        month:
          format: int32
          type: integer
        nanos:
          format: int32
          type: integer
        seconds:
          format: int32
          type: integer
        time:
          format: int64
          type: integer
        timezoneOffset:
          format: int32
          type: integer
        year:
          format: int32
          type: integer
      title: Timestamp
      type: object
    TimestampReq:
      properties:
        date:
          format: int32
          type: integer
        hours:
          format: int32
          type: integer
        minutes:
          format: int32
          type: integer
        month:
          format: int32
          type: integer
        nanos:
          format: int32
          type: integer
        seconds:
          format: int32
          type: integer
        time:
          format: int64
          type: integer
        year:
          format: int32
          type: integer
      title: TimestampReq
      type: object
    TimestampRes:
      properties:
        date:
          format: int32
          type: integer
        day:
          format: int32
          type: integer
        hours:
          format: int32
          type: integer
        minutes:
          format: int32
          type: integer
        month:
          format: int32
          type: integer
        nanos:
          format: int32
          type: integer
        seconds:
          format: int32
          type: integer
        time:
          format: int64
          type: integer
        timezoneOffset:
          format: int32
          type: integer
        year:
          format: int32
          type: integer
      title: TimestampRes
      type: object
    Topic:
      properties:
        description:
          type: string
        example:
          type: object
        name:
          type: string
        state:
          type: string
      title: Topic
      type: object
    VersionInfo:
      properties:
        artifactId:
          type: string
        branch:
          type: string
        buildTime:
          type: string
        commitId:
          type: string
        commitMessage:
          type: string
        connectedOuterServices:
          items:
            $ref: '#/components/schemas/ConnectedOuterService'
          type: array
        groupId:
          type: string
        version:
          type: string
      title: VersionInfo
      type: object
  securitySchemes:
    Authorization:
      in: header
      name: Authorization
      type: apiKey
info:
  contact: {}
  description: Api Documentation
  license:
    name: Apache 2.0
    url: http://www.apache.org/licenses/LICENSE-2.0
  termsOfService: urn:tos
  title: Api Documentation
  version: '1.0'
openapi: 3.0.3
paths:
  /api/register/v1/action:
    post:
      operationId: createActionUsingPOST
      parameters:
      - description: tenant
        in: header
        name: data-partition-id
        required: true
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateActionDto'
      responses:
        '200':
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/Action'
          description: OK
        '201':
          description: Created
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
      security:
      - Authorization:
        - global
      summary: createAction
      tags:
      - action-api
  /api/register/v1/action/{id}:
    delete:
      operationId: deleteActionUsingDELETE
      parameters:
      - description: tenant
        in: header
        name: data-partition-id
        required: true
      - description: id
        in: path
        name: id
        required: true
        schema:
          pattern: ^[A-Za-z0-9-]{2,50}
          type: string
        style: simple
      responses:
        '200':
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ResponseEntity'
          description: OK
        '204':
          description: No Content
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
      security:
      - Authorization:
        - global
      summary: deleteAction
      tags:
      - action-api
    get:
      operationId: getActionUsingGET
      parameters:
      - description: tenant
        in: header
        name: data-partition-id
        required: true
      - description: id
        in: path
        name: id
        required: true
        schema:
          pattern: ^[A-Za-z0-9-]{2,50}
          type: string
        style: simple
      responses:
        '200':
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/Action'
          description: OK
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
      security:
      - Authorization:
        - global
      summary: getAction
      tags:
      - action-api
  /api/register/v1/action:retrieve:
    post:
      operationId: retrieveActionUsingPOST
      parameters:
      - description: tenant
        in: header
        name: data-partition-id
        required: true
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/JsonNode'
      responses:
        '200':
          content:
            '*/*':
              schema:
                items:
                  $ref: '#/components/schemas/Action'
                type: array
          description: OK
        '201':
          description: Created
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
      security:
      - Authorization:
        - global
      summary: retrieveAction
      tags:
      - action-api
  /api/register/v1/action:test:
    post:
      operationId: testActionUsingPOST
      parameters:
      - description: tenant
        in: header
        name: data-partition-id
        required: true
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TestActionRequest'
      responses:
        '200':
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ParsedAction'
          description: OK
        '201':
          description: Created
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
      security:
      - Authorization:
        - global
      summary: testAction
      tags:
      - action-api
  /api/register/v1/ah/liveness_check:
    get:
      operationId: livenessCheckUsingGET
      parameters:
      - description: tenant
        in: header
        name: data-partition-id
        required: true
      responses:
        '200':
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ResponseEntity'
          description: OK
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
      security:
      - Authorization:
        - global
      summary: livenessCheck
      tags:
      - health-checks-api
  /api/register/v1/ah/readiness_check:
    get:
      operationId: readinessCheckUsingGET
      parameters:
      - description: tenant
        in: header
        name: data-partition-id
        required: true
      responses:
        '200':
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ResponseEntity'
          description: OK
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
      security:
      - Authorization:
        - global
      summary: readinessCheck
      tags:
      - health-checks-api
  /api/register/v1/ddms:
    get:
      operationId: queryDMSUsingGET
      parameters:
      - description: tenant
        in: header
        name: data-partition-id
        required: true
      - description: type
        in: query
        name: type
        required: true
        schema:
          pattern: ^[A-Za-z0-9]{1,50}
          type: string
        style: form
      responses:
        '200':
          content:
            '*/*':
              schema:
                items:
                  $ref: '#/components/schemas/DdmsRes'
                type: array
          description: OK
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
      security:
      - Authorization:
        - global
      summary: queryDMS
      tags:
      - ddms-api
    post:
      operationId: postDMSUsingPOST
      parameters:
      - description: tenant
        in: header
        name: data-partition-id
        required: true
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DdmsReq'
      responses:
        '200':
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/DdmsRes'
          description: OK
        '201':
          description: Created
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
      security:
      - Authorization:
        - global
      summary: postDMS
      tags:
      - ddms-api
  /api/register/v1/ddms/{id}:
    delete:
      operationId: deleteDMSUsingDELETE
      parameters:
      - description: tenant
        in: header
        name: data-partition-id
        required: true
      - description: id
        in: path
        name: id
        required: true
        schema:
          pattern: ^[A-Za-z0-9-]{2,50}
          type: string
        style: simple
      responses:
        '200':
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ResponseEntity'
          description: OK
        '204':
          description: No Content
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
      security:
      - Authorization:
        - global
      summary: deleteDMS
      tags:
      - ddms-api
    get:
      operationId: getDMSUsingGET
      parameters:
      - description: tenant
        in: header
        name: data-partition-id
        required: true
      - description: id
        in: path
        name: id
        required: true
        schema:
          pattern: ^[A-Za-z0-9-]{2,50}
          type: string
        style: simple
      responses:
        '200':
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/DdmsRes'
          description: OK
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
      security:
      - Authorization:
        - global
      summary: getDMS
      tags:
      - ddms-api
  /api/register/v1/ddms/{id}/{type}/{localid}:
    get:
      operationId: redirectToDmsUsingGET
      parameters:
      - description: tenant
        in: header
        name: data-partition-id
        required: true
      - description: id
        in: path
        name: id
        required: true
        schema:
          pattern: ^[A-Za-z0-9-]{2,50}
          type: string
        style: simple
      - description: type
        in: path
        name: type
        required: true
        schema:
          pattern: ^[A-Za-z]{2,50}
          type: string
        style: simple
      - description: localid
        in: path
        name: localid
        required: true
        schema:
          pattern: ^[A-Za-z0-9-]{2,50}
          type: string
        style: simple
      responses:
        '200':
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ResponseEntity'
          description: OK
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
      security:
      - Authorization:
        - global
      summary: redirectToDms
      tags:
      - ddms-api
  /api/register/v1/info:
    get:
      operationId: infoUsingGET
      parameters:
      - description: tenant
        in: header
        name: data-partition-id
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/VersionInfo'
          description: OK
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
      security:
      - Authorization:
        - global
      summary: info
      tags:
      - info-api
  /api/register/v1/subscription:
    get:
      operationId: querySubscriptionUsingGET
      parameters:
      - description: tenant
        in: header
        name: data-partition-id
        required: true
      - description: notificationId
        in: query
        name: notificationId
        required: true
        schema:
          type: string
        style: form
      responses:
        '200':
          content:
            '*/*':
              schema:
                items:
                  $ref: '#/components/schemas/Subscription'
                type: array
          description: OK
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
      security:
      - Authorization:
        - global
      summary: querySubscription
      tags:
      - subscriber-api
    post:
      operationId: createSubscriptionUsingPOST
      parameters:
      - description: tenant
        in: header
        name: data-partition-id
        required: true
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Subscription'
      responses:
        '200':
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/Subscription'
          description: OK
        '201':
          description: Created
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
      security:
      - Authorization:
        - global
      summary: createSubscription
      tags:
      - subscriber-api
  /api/register/v1/subscription/{id}:
    delete:
      operationId: deleteSubscriptionUsingDELETE
      parameters:
      - description: tenant
        in: header
        name: data-partition-id
        required: true
      - description: id
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      responses:
        '200':
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ResponseEntity'
          description: OK
        '204':
          description: No Content
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
      security:
      - Authorization:
        - global
      summary: deleteSubscription
      tags:
      - subscriber-api
    get:
      operationId: getSubscriptionUsingGET
      parameters:
      - description: tenant
        in: header
        name: data-partition-id
        required: true
      - description: id
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      responses:
        '200':
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/SubscriptionInfo'
          description: OK
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
      security:
      - Authorization:
        - global
      summary: getSubscription
      tags:
      - subscriber-api
  /api/register/v1/subscription/{id}/secret:
    put:
      operationId: updateSecretUsingPUT
      parameters:
      - description: tenant
        in: header
        name: data-partition-id
        required: true
      - description: id
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Secret'
      responses:
        '200':
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ResponseEntity'
          description: OK
        '201':
          description: Created
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
      security:
      - Authorization:
        - global
      summary: updateSecret
      tags:
      - subscriber-api
  /api/register/v1/test/challenge/{count}:
    get:
      operationId: testCrcUsingGET
      parameters:
      - description: crc
        in: query
        name: crc
        required: true
        schema:
          type: string
        style: form
      - description: tenant
        in: header
        name: data-partition-id
        required: true
      - description: hmac
        in: query
        name: hmac
        required: true
        schema:
          type: string
        style: form
      responses:
        '200':
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ChallengeResponse'
          description: OK
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
      security:
      - Authorization:
        - global
      summary: testCrc
      tags:
      - subscriber-listener-api
    post:
      operationId: testPushHmacUsingPOST
      parameters:
      - description: tenant
        in: header
        name: data-partition-id
        required: true
      - description: hmac
        in: query
        name: hmac
        required: true
        schema:
          type: string
        style: form
      requestBody:
        content:
          application/json:
            schema:
              type: object
      responses:
        '200':
          description: OK
        '201':
          description: Created
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
      security:
      - Authorization:
        - global
      summary: testPushHmac
      tags:
      - subscriber-listener-api
  /api/register/v1/test/gsa-challenge/{count}:
    get:
      operationId: testGsaUsingGET
      parameters:
      - description: crc
        in: query
        name: crc
        required: true
        schema:
          type: string
        style: form
      - description: tenant
        in: header
        name: data-partition-id
        required: true
      responses:
        '200':
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ChallengeResponse'
          description: OK
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
      security:
      - Authorization:
        - global
      summary: testGsa
      tags:
      - gsa-subscriber-listener-api
    post:
      operationId: testPushGsaUsingPOST
      parameters:
      - description: tenant
        in: header
        name: data-partition-id
        required: true
      requestBody:
        content:
          application/json:
            schema:
              type: object
      responses:
        '200':
          description: OK
        '201':
          description: Created
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
      security:
      - Authorization:
        - global
      summary: testPushGsa
      tags:
      - gsa-subscriber-listener-api
  /api/register/v1/topics:
    get:
      operationId: listMessagesUsingGET
      parameters:
      - description: tenant
        in: header
        name: data-partition-id
        required: true
      responses:
        '200':
          content:
            '*/*':
              schema:
                items:
                  $ref: '#/components/schemas/Topic'
                type: array
          description: OK
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
      security:
      - Authorization:
        - global
      summary: listMessages
      tags:
      - subscriber-api
servers:
- description: Inferred Url
  url: https://uptesting0.oep.ppe.azure-int.net
tags:
- description: Action Api
  name: action-api
- description: Ddms Api
  name: ddms-api
- description: Gsa Subscriber Listener Api
  name: gsa-subscriber-listener-api
- description: Health Checks Api
  name: health-checks-api
- description: Info Api
  name: info-api
- description: Subscriber Api
  name: subscriber-api
- description: Subscriber Listener Api
  name: subscriber-listener-api
